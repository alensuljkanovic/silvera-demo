/**
    Use this file to implement business logic. This file will be preserved
    during next compilations.

    Generated by: silvera
    Date: 2020-10-17 12:42:52
*/

package com.silvera.User.service.impl;

import java.util.Optional;
import org.springframework.stereotype.Service;
import com.silvera.User.domain.model.*;
import com.silvera.User.repository.*;
import com.silvera.User.service.base.*;

import org.springframework.beans.factory.annotation.Autowired;





@Service
public class UserService implements IUserService {





    @Autowired
    UserRepository userRepository;


    public UserService(){
        super();
    }

    // Auto-generated CRUD methods


    @Override
    public User createUser(User user){
        userRepository.save(user);
        Optional<User> opt = userRepository.findById(user.getId());
        return opt.orElse(null);
    }

    @Override
    public User updateUser(java.lang.String id, User userUpdate){
        User entity = this.readUser(id);
        userRepository.save(userUpdate);
        return userUpdate;
    }

    @Override
    public User readUser(java.lang.String id){
        Optional<User> opt = userRepository.findById(id);
        return opt.orElseThrow(IllegalArgumentException::new);
    }

    @Override
    public void deleteUser(java.lang.String id){
        User entity = readUser(id);
        userRepository.delete(entity);
    }





    @Override
    public java.util.List<User> listUsers() {
        return userRepository.findAll();
    }



    @Override
    public java.lang.Boolean userExist(java.lang.String username) {
        Optional<User> opt = userRepository.findById(username);
        return opt.isPresent();
    }



    @Override
    public java.lang.String userEmail(java.lang.String username) {
        User user = readUser(username);
        return user.getEmail();
    }

}